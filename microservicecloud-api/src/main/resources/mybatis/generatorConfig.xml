<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!--编码设置-->
        <property name="javaFileEncoding" value="UTF-8"/>

        <!-- 通用mapper插件 -->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="com.qin.wcc.framework.mapper.BaseMapper" />
            <!-- caseSensitive 是否区分大小写，默认值 false。如果数据库区分大小写，这里就需要配置为 true，这样当表名为 USER 时，会生成 @Table(name = "USER") 注解，否则使用小写 user 时会找不到表-->
            <property name="caseSensitive" value="true"/>
            <!-- orceAnnotation 是否强制生成注解，默认 false，如果设置为 true，不管数据库名和字段名是否一致，都会生成注解（包含 @Table 和 @Column）-->
            <property name="forceAnnotation" value="true"/>
            <!--beginningDelimiter 和 endingDelimiter 开始和结束分隔符，对于有关键字的情况下适用。-->
            <property name="beginningDelimiter" value="`"/>
            <property name="endingDelimiter" value="`"/>
            <!--useMapperCommentGenerator 是否使用通用 Mapper 提供的注释工具，默认 true 使用，这样在生成代码时会包含字段的注释（目前只有 mysql 和 oracle 支持），设置 false 后会用默认的，或者你可以配置自己的注释插件-->
            <property name="useMapperCommentGenerator" value="true"/>
        </plugin>



        <!-- 自动生成toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <!-- 自动生成equals方法和hashcode方法 -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
        <!-- 自动生成序列化 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />

        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!-- 配置数据库连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://10.211.55.29:3306/cluoddb01" userId="root"
                        password="123456">
        </jdbcConnection>

        <!-- 是否启用强制转化BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- 配置逆向工程的bean targetPackage:生成的包名 targetProject:生成文件的路径 -->
        <javaModelGenerator targetPackage="com.qin.wcc.entities"
                            targetProject="./microservicecloud-api/src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true" />
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!-- 配置SQL映射的文件位置 -->
        <sqlMapGenerator targetPackage="mtbatis.mappers"
                         targetProject="./microservicecloud-provider-dept-8001/src/main/resources">
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- 配置DAO接口的存放位置 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.qin.wcc.mappers"
                             targetProject="./microservicecloud-provider-dept-8001/src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>


        <!-- 系统表开始 -->
        <table tableName="dept" />


    </context>
</generatorConfiguration>